06_Git.txt


# Git
	- .git 폴더가 존재하는 폴더의 모든 내용을 관리해주는 프로그램
	- .git 폴더가 존재하는 폴더를 레포지토리 (repository)라고 부른다.
	- 레포지토리 내부에서 무언가가 조금이라도 변한다면 모든것을 알아채고 관리한다.
	- 원하는 Git을 설치하고 사용해야 하지만 Eclipse에도 Git이 내장되어 있다.
	
# Git을 통한 폴더 관리
	- 레포지토리 내부에 무언가 변하면 git은 그것을 눈치재고 unstaged 상태로 만든다.
	- 개발자가 여러 unstaged들 중에서 이번 커밋에 포함시킬 변화들만 stage 상태로 만든다.
	- 커밋을 통해 stage된 모든 벼화들을 저장한다.
	- stage에 포함되지 안흥ㄴ 변화들은 unstaged 상태로 유지된다.
	
# 커밋 (commit)
	- 현재 레포지토리 상태를 그대로 저장해 놓는 것.
	- Git을 통해 언제든 레포지토리를 예전 커밋 상태로 되돌릴 수 있다.
	
# 브렌치 (Branch)
	- 하나의 레포지토리를 다양한 상태로 저장하기 위한 기능
	- 다른 형태의 레포지토리를 보존하고 싶다면 새로운 브렌치를 만드는 것이 바람직하다.
	
# 체크아웃 (Checkout)
	- 예전 커밋으로 돌아가는 것
	- 다른 브렌치의 상태로 전환하는 것

# 머지 (Merge)
	- 다른 브렌치에서 작업한 내용을 현재 브랜치로 가져와 합치는 것
	- 기준이 될 브랜치로 체크아웃 한 뒤에 합치고 싶은 브렌치를 선택하고 Merge한다.
	ex) master에 BranchA를 합치고 싶을 경우,
		master로 체크아웃한 뒤에 BranchA를 머지한다.
		
# 로컬 레포지토리 (Local Repository)
	- 내 컴퓨터에서 작업 중인 레포지토리를 의미한다.
	ex) Github에서 다운(clone)받아 내 컴퓨터에서 작업중인 레포지토리
	
# 원격 레포지토리 (Remote REpository)
	- 다른 컴퓨터에 저장되어 있는 레포지토리를 의미한다.
	- 내 컴퓨터로 clone 받아와서 해당 레포지토리를 사용할 수 있다.
	
# 푸쉬 (Push)
	- 내가 로컬 레포지토리에서 작업한 내용(새로운 커밋)을 원격 레포지토리에 업데이트하는 것
	
# 풀 (Pull)
	- 원격 레포지토리에 업데이트된 새로운 내용을 내 로컬 레포지토리로 가져와서
	  로컬 레포지토리를 최신 상태로 변환하는 것